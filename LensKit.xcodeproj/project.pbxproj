// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"LensKit::LensKitPackageTests::ProductTarget" /* LensKitPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_43 /* Build configuration list for PBXAggregateTarget "LensKitPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_46 /* PBXTargetDependency */,
			);
			name = LensKitPackageTests;
			productName = LensKitPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		1E2F8A3F1F9CC6C9000D4AAF /* Lenser.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1E2F8A3E1F9CC6C9000D4AAF /* Lenser.swift */; };
		1EE9703A1FA2493200DE709F /* Lenser.generated.swift in Sources */ = {isa = PBXBuildFile; fileRef = 1EE970391FA2493200DE709F /* Lenser.generated.swift */; };
		OBJ_23 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_29 /* LensKitTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* LensKitTests.swift */; };
		OBJ_30 /* Example.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Example.swift */; };
		OBJ_32 /* LensKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LensKit::LensKit::Product" /* LensKit.framework */; };
		OBJ_39 /* Lens.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* Lens.swift */; };
		OBJ_40 /* Operators.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Operators.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		1E2F8A3C1F9CC66B000D4AAF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LensKit::LensKitTests";
			remoteInfo = LensKitTests;
		};
		1E2F8A3D1F9CC66B000D4AAF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LensKit::LensKit";
			remoteInfo = LensKit;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		1E2F8A3E1F9CC6C9000D4AAF /* Lenser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Lenser.swift; sourceTree = "<group>"; };
		1E2F8A421F9CD396000D4AAF /* Lenser.stencil */ = {isa = PBXFileReference; lastKnownFileType = text; path = Lenser.stencil; sourceTree = "<group>"; };
		1EE970391FA2493200DE709F /* Lenser.generated.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Lenser.generated.swift; sourceTree = "<group>"; };
		"LensKit::LensKit::Product" /* LensKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = LensKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"LensKit::LensKitTests::Product" /* LensKitTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = LensKitTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* Operators.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Operators.swift; sourceTree = "<group>"; };
		OBJ_13 /* LensKitTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LensKitTests.swift; sourceTree = "<group>"; };
		OBJ_14 /* Example.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Example.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* Lens.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Lens.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_31 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_32 /* LensKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_41 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		1E2F8A401F9CD298000D4AAF /* Templates */ = {
			isa = PBXGroup;
			children = (
				1E2F8A421F9CD396000D4AAF /* Lenser.stencil */,
			);
			path = Templates;
			sourceTree = "<group>";
		};
		1EE970381FA2493200DE709F /* CodeGenerated */ = {
			isa = PBXGroup;
			children = (
				1EE970391FA2493200DE709F /* Lenser.generated.swift */,
			);
			path = CodeGenerated;
			sourceTree = "<group>";
		};
		OBJ_11 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_12 /* LensKitTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_12 /* LensKitTests */ = {
			isa = PBXGroup;
			children = (
				1EE970381FA2493200DE709F /* CodeGenerated */,
				OBJ_13 /* LensKitTests.swift */,
				OBJ_14 /* Example.swift */,
			);
			name = LensKitTests;
			path = Tests/LensKitTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_15 /* Products */ = {
			isa = PBXGroup;
			children = (
				"LensKit::LensKitTests::Product" /* LensKitTests.xctest */,
				"LensKit::LensKit::Product" /* LensKit.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_11 /* Tests */,
				1E2F8A401F9CD298000D4AAF /* Templates */,
				OBJ_15 /* Products */,
			);
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* LensKit */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* LensKit */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Lens.swift */,
				1E2F8A3E1F9CC6C9000D4AAF /* Lenser.swift */,
				OBJ_10 /* Operators.swift */,
			);
			name = LensKit;
			path = Sources/LensKit;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"LensKit::LensKit" /* LensKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_35 /* Build configuration list for PBXNativeTarget "LensKit" */;
			buildPhases = (
				OBJ_38 /* Sources */,
				OBJ_41 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LensKit;
			productName = LensKit;
			productReference = "LensKit::LensKit::Product" /* LensKit.framework */;
			productType = "com.apple.product-type.framework";
		};
		"LensKit::LensKitTests" /* LensKitTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_25 /* Build configuration list for PBXNativeTarget "LensKitTests" */;
			buildPhases = (
				OBJ_28 /* Sources */,
				OBJ_31 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_33 /* PBXTargetDependency */,
			);
			name = LensKitTests;
			productName = LensKitTests;
			productReference = "LensKit::LensKitTests::Product" /* LensKitTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"LensKit::SwiftPMPackageDescription" /* LensKitPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_19 /* Build configuration list for PBXNativeTarget "LensKitPackageDescription" */;
			buildPhases = (
				OBJ_22 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LensKitPackageDescription;
			productName = LensKitPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0920;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "LensKit" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5;
			productRefGroup = OBJ_15 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"LensKit::SwiftPMPackageDescription" /* LensKitPackageDescription */,
				"LensKit::LensKitTests" /* LensKitTests */,
				"LensKit::LensKit" /* LensKit */,
				"LensKit::LensKitPackageTests::ProductTarget" /* LensKitPackageTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_22 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_23 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_28 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_29 /* LensKitTests.swift in Sources */,
				OBJ_30 /* Example.swift in Sources */,
				1EE9703A1FA2493200DE709F /* Lenser.generated.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_38 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_39 /* Lens.swift in Sources */,
				1E2F8A3F1F9CC6C9000D4AAF /* Lenser.swift in Sources */,
				OBJ_40 /* Operators.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_33 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LensKit::LensKit" /* LensKit */;
			targetProxy = 1E2F8A3D1F9CC66B000D4AAF /* PBXContainerItemProxy */;
		};
		OBJ_46 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LensKit::LensKitTests" /* LensKitTests */;
			targetProxy = 1E2F8A3C1F9CC66B000D4AAF /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_20 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_21 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_26 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LensKit.xcodeproj/LensKitTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LensKitTests;
			};
			name = Debug;
		};
		OBJ_27 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LensKit.xcodeproj/LensKitTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LensKitTests;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_36 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LensKit.xcodeproj/LensKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LensKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LensKit;
			};
			name = Debug;
		};
		OBJ_37 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = LensKit.xcodeproj/LensKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LensKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = LensKit;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_44 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_45 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_19 /* Build configuration list for PBXNativeTarget "LensKitPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_20 /* Debug */,
				OBJ_21 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_2 /* Build configuration list for PBXProject "LensKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_25 /* Build configuration list for PBXNativeTarget "LensKitTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_26 /* Debug */,
				OBJ_27 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_35 /* Build configuration list for PBXNativeTarget "LensKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_36 /* Debug */,
				OBJ_37 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_43 /* Build configuration list for PBXAggregateTarget "LensKitPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_44 /* Debug */,
				OBJ_45 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
